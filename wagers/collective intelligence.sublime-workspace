{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"game_d",
				"game_database_id"
			],
			[
				"schedule",
				"schedule__game_database_id"
			],
			[
				"inline",
				"inline"
			],
			[
				"date",
				"datetime_str"
			],
			[
				"game",
				"games"
			],
			[
				"bore",
				"border-radius"
			],
			[
				"table",
				"table-cell"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "from math import sqrt\n\n# A dictionary of movie critics and their ratings of a small set of movies\ncritics={'Lisa Rose': {'Lady in the Water': 2.5, 'Snakes on a Plane': 3.5,\n    'Just My Luck': 3.0, 'Superman Returns': 3.5, 'You, Me and Dupree': 2.5,\n    'The Night Listener': 3.0},\n    'Gene Seymour': {'Lady in the Water': 3.0, 'Snakes on a Plane': 3.5,\n    'Just My Luck': 1.5, 'Superman Returns': 5.0, 'The Night Listener': 3.0,\n    'You, Me and Dupree': 3.5},\n    'Michael Phillips': {'Lady in the Water': 2.5, 'Snakes on a Plane': 3.0,\n    'Superman Returns': 3.5, 'The Night Listener': 4.0},\n    'Claudia Puig': {'Snakes on a Plane': 3.5, 'Just My Luck': 3.0,\n    'The Night Listener': 4.5, 'Superman Returns': 4.0,\n    'You, Me and Dupree': 2.5},\n    'Mick LaSalle': {'Lady in the Water': 3.0, 'Snakes on a Plane': 4.0,\n    'Just My Luck': 2.0, 'Superman Returns': 3.0, 'The Night Listener': 3.0,\n    'You, Me and Dupree': 2.0},\n    'Jack Matthews': {'Lady in the Water': 3.0, 'Snakes on a Plane': 4.0,\n    'The Night Listener': 3.0, 'Superman Returns': 5.0, 'You, Me and Dupree': 3.5},\n    'Toby': {'Snakes on a Plane':4.5,'You, Me and Dupree':1.0,'Superman Returns':4.0}}\n\ndef transform_prefs(prefs):\n    result = {}\n    for person in prefs:\n        for item in prefs[person]:\n            result.setdefault(item, {})\n\n            # Flip item and person\n            result[item][person] = prefs[person][item]\n    return result\n\nmovies = transform_prefs(critics)\ndef sim_distance(prefs, person1, person2):\n    \"\"\"\n    Return a distance-based similarity score for person1 and person2. The \n    value returned will always between 0 and 1. A value of 1 indicates that \n    the users are similar to each other. A rating of zero indicates the users \n    are different from each other.\n    \"\"\"\n    # Build a list of shared items\n    shared_interests = []\n    for item in prefs[person1]:\n        if item in prefs[person2]:\n            shared_interests.append(item)\n\n    if len(shared_interests) == 0:\n        return 0\n\n    euclidean_distance = sqrt(sum([pow(prefs[person1][item]-prefs[person2][item], 2)\n                                   for item in shared_interests]))\n    return 1 / (1 + euclidean_distance)\n\ndef sim_pearson(prefs, person1, person2):\n    \"\"\"\n    Returns the Person corellation coefficient for p1 and p2.\n    \"\"\"\n    shared_interests = [item for item in prefs[person1] if item in prefs[person2]]\n\n    n = len(shared_interests)\n    if n == 0:\n        return 0\n\n    # Add up the prefrences\n    sum1 = sum([prefs[person1][interest] for interest in shared_interests])\n    sum2 = sum([prefs[person2][interest] for interest in shared_interests])\n\n    # Sum up the squares\n    sum1Sq = sum([pow(prefs[person1][interest], 2) for interest in shared_interests])\n    sum2Sq = sum([pow(prefs[person2][interest], 2) for interest in shared_interests])\n\n    # Sum up the products\n    pSum = sum([prefs[person1][interest] * prefs[person2][interest] \n                for interest in shared_interests])\n\n    num = pSum - (sum1 * sum2 / n)\n    den = sqrt((sum1Sq -pow(sum1, 2) / n) * (sum2Sq - pow(sum2, 2) / n))\n    return num / den\n\ndef top_matches(prefs, person, n=5, similarity=sim_pearson):\n    \"\"\"\n    prefs: a dictionary of prefrences\n    person: the person to compare prefrences with\n    n: number of results to return\n    similiarty: the function to use to see how similar two users are\n\n    Returns the best matches for person from the prefs dictionary.\n    \"\"\"\n    scores = [(similarity(prefs, person, other), other)\n              for other in prefs if other != person]\n    # Sort the list so the highest scores appear at the top\n    scores.sort()\n    scores.reverse()\n    return scores[0:n]\n\ndef get_recommendations(prefs, person, similarity=sim_pearson):\n    \"\"\"\n    Gets recommendations for a person by using a weighted average of every\n    other user's ranking.\n    \"\"\"\n    totals = {}\n    sim_sums = {}\n    for other in prefs:\n        if other == person: continue\n        sim = similarity(prefs, person, other)\n\n        # ignore scores of zero or lower\n        if sim <= 0: continue\n        for item in prefs[other]:\n            # Only score movies I haven't seen yet\n            if item not in prefs[person] or prefs[person][item] == 0:\n                totals.setdefault(item, 0)\n                totals[item] += prefs[other][item] * sim\n\n                sim_sums.setdefault(item, 0)\n                sim_sums[item] += sim\n    # Create the normalized list\n    rankings = [(total / sim_sums[item], item) for item, total in totals.items()]\n\n    # Return the sorted list\n    rankings.sort()\n    rankings.reverse()\n    return rankings\n\n\n",
			"file": "/C/Users/joshua/Programming/Programming-Collective-Intelligence/Joshua Cole/recomnendations.py",
			"file_size": 4361,
			"file_write_time": 130160729128912780,
			"settings":
			{
				"buffer_size": 4648,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "",
			"file": "/C/Users/joshua/AppData/Roaming/Sublime Text 2/Packages/User/Python.sublime-settings",
			"file_size": -1,
			"file_write_time": -1,
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Python 2.7.3 (default, Apr 10 2012, 23:31:26) [MSC v.1500 32 bit (Intel)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> >>> get_recommendations(critics, \"Toby\")\n[(3.3477895267131013, 'The Night Listener'), (2.8325499182641614, 'Lady in the Water'), (2.5309807037655645, 'Just My Luck')]\n>>> >>> movies\n{'Lady in the Water': {'Lisa Rose': 2.5, 'Jack Matthews': 3.0, 'Michael Phillips': 2.5, 'Gene Seymour': 3.0, 'Mick LaSalle': 3.0}, 'Snakes on a Plane': {'Jack Matthews': 4.0, 'Mick LaSalle': 4.0, 'Claudia Puig': 3.5, 'Lisa Rose': 3.5, 'Toby': 4.5, 'Gene Seymour': 3.5, 'Michael Phillips': 3.0}, 'Just My Luck': {'Claudia Puig': 3.0, 'Lisa Rose': 3.0, 'Gene Seymour': 1.5, 'Mick LaSalle': 2.0}, 'Superman Returns': {'Jack Matthews': 5.0, 'Mick LaSalle': 3.0, 'Claudia Puig': 4.0, 'Lisa Rose': 3.5, 'Toby': 4.0, 'Gene Seymour': 5.0, 'Michael Phillips': 3.5}, 'The Night Listener': {'Jack Matthews': 3.0, 'Mick LaSalle': 3.0, 'Claudia Puig': 4.5, 'Lisa Rose': 3.0, 'Gene Seymour': 3.0, 'Michael Phillips': 4.0}, 'You, Me and Dupree': {'Jack Matthews': 3.5, 'Mick LaSalle': 2.0, 'Claudia Puig': 2.5, 'Lisa Rose': 2.5, 'Toby': 1.0, 'Gene Seymour': 3.5}}\n>>> top_matches(movies, \"Superman Returns\")\n[(0.6579516949597695, 'You, Me and Dupree'), (0.4879500364742689, 'Lady in the Water'), (0.11180339887498941, 'Snakes on a Plane'), (-0.1798471947990544, 'The Night Listener'), (-0.42289003161103106, 'Just My Luck')]\n>>> get_recommendations(movies, \"Just My Luck\")\n[(4.0, 'Michael Phillips'), (3.0, 'Jack Matthews')]\n>>> ",
			"settings":
			{
				"buffer_size": 1556,
				"line_ending": "Windows",
				"name": "*REPL* [python]",
				"scratch": true
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 196.0,
		"selected_items":
		[
			[
				"Spaces",
				"Indentation: Convert to Spaces"
			],
			[
				"tabs",
				"View: Toggle Tabs"
			],
			[
				"Python",
				"SublimeREPL: Python"
			],
			[
				"python",
				"SublimeREPL: Python"
			],
			[
				"Sublime Python",
				"SublimeREPL: Python"
			],
			[
				"Pyth",
				"SublimeREPL: Python"
			],
			[
				"Sublime Py	",
				"SublimeREPL: Python"
			],
			[
				"SublimeREPL: Python",
				"SublimeREPL: Python"
			],
			[
				"Sub P	",
				"SublimeREPL: Python"
			],
			[
				"SublimeREpl:P",
				"SublimeREPL: Python"
			],
			[
				"SublimeRepl: Python",
				"SublimeREPL: Python"
			],
			[
				"SublimeRepl:python",
				"SublimeREPL: Python"
			],
			[
				"SublimeREPL:P",
				"SublimeREPL: Python"
			],
			[
				"Sumble",
				"SublimeREPL: Python - Sublime Text 2"
			],
			[
				"",
				"Package Control: Install Package"
			],
			[
				"Python ",
				"SublimeREPL: Python - Sublime Text 2"
			],
			[
				"Clojure",
				"SublimeREPL: Clojure"
			],
			[
				"Cloju",
				"SublimeREPL: Clojure"
			],
			[
				"Markdown",
				"Set Syntax: Markdown"
			],
			[
				"Set Syn mark",
				"Set Syntax: Markdown"
			],
			[
				"Set Syntax: Mark",
				"Set Syntax: Markdown"
			],
			[
				"Sub",
				"SublimeREPL: Python"
			],
			[
				"Package Control: Install Package",
				"Package Control: Install Package"
			],
			[
				"Package Control: In",
				"Package Control: Install Package"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 160.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/joshua/Programming/wagering/game_database/models.py",
		"/C/Users/joshua/Programming/wagering/wagers/tasks.py",
		"/C/Users/joshua/Programming/wagering/templates/wagers/propositions/snippets/admin_prop.html",
		"/C/Users/joshua/Programming/wagering/wagers/models.py",
		"/C/Users/joshua/Programming/wagering/wagers/forms.py",
		"/C/Users/joshua/Programming/wagering/wagers/urls.py",
		"/C/Users/joshua/Programming/wagering/wagers/views.py",
		"/C/Windows/System32/drivers/etc/hosts",
		"/C/Users/joshua/Programming/wagering/templates/wagers/propositions/snippets/add_form.html",
		"/C/Users/joshua/Programming/wagering/templates/scaffolding.html",
		"/C/Users/joshua/Programming/wagering/templates/wagers/tournaments/add.html",
		"/C/Users/joshua/Programming/wagering/templates/wagers/tournaments/admin.html",
		"/C/Users/joshua/Programming/wagering/wagers/admin.py",
		"/C/Users/joshua/Programming/wagering/wagers/migrations/0022_schedules.py",
		"/C/Users/joshua/Programming/wagering/wagers/migrations/0005_open_bug_fix.py",
		"/C/Users/joshua/Programming/wagering/templates/wagers/propositions/add.html",
		"/C/Users/joshua/Programming/wagering/templates/wagers/propositions/pay.html",
		"/C/Users/joshua/Programming/wagering/site_media/css/officeprops.css",
		"/C/Users/joshua/Programming/wagering/templates/wagers/propositions/snippets/prop.html",
		"/C/Users/joshua/Programming/wagering/scraper.py",
		"/C/Users/joshua/Programming/wagering/templates/wagers/admin_landing.html",
		"/C/Users/joshua/Programming/wagering/templates/wagers/home.html",
		"/C/Users/joshua/Programming/wagering/templates/wagers/player_landing.html",
		"/C/Users/joshua/Downloads/Office Props_files/in(3).php",
		"/C/Users/joshua/Programming/wagering/wagering/urls.py",
		"/C/Users/joshua/Programming/wagering/README.md",
		"/C/Users/joshua/Programming/wagering/wagering/settings.py",
		"/C/Users/joshua/Programming/wagering/templates/wagers/tournaments/user-tournament-list.html",
		"/C/Users/joshua/Programming/wagering/templates/wagers/tournaments/open-list.html",
		"/C/Users/joshua/Google Drive/Articles/8 Great Ways to Motivate Yourself When You Just Don't Feel Like I.gdoc",
		"/C/Users/joshua/Programming/wagering/templates/wagers/players/bet_history.html",
		"/C/Users/joshua/Programming/wagering/templates/wagers/propositions/bet.html",
		"/C/Users/joshua/Programming/wagering/templates/registration/snippets/login_form.html",
		"/C/Users/joshua/Programming/wagering/templates/registration/snippets/register_form.html",
		"/C/Users/joshua/Programming/wagering/templates/wagers/tournaments/snippets/tournament-info.html",
		"/C/Users/joshua/Programming/wagering/templates/wagers/about.html",
		"/C/Users/joshua/Programming/wagering/templates/wagers/tournaments/share.html",
		"/C/Users/joshua/Programming/wagering/templates/wagers/tournaments/details.html",
		"/C/Users/joshua/Programming/wagering/templates/wagers/tournaments/advert.html",
		"/C/Users/joshua/Programming/wagering/templates/wagers/tournaments/active-list.html",
		"/C/Users/joshua/Programming/wagering/templates/bets/bet_info.html",
		"/C/Users/joshua/Programming/wagering/templates/wagers/snippets/wager.html",
		"/C/Users/joshua/Programming/wagering/templates/wagers/tournaments/snippets/join_form.html",
		"/C/Users/joshua/Programming/wagering/templates/wagers/tournaments/snippets/pay_form.html",
		"/C/Users/joshua/Programming/wagering/mlb_schedule_import.py",
		"/C/Users/joshua/Programming/wagering/wagering/scripts/__init__.py",
		"/C/Users/joshua/Programming/wagering/wagering/mlb_schedule_import.py",
		"/C/Users/joshua/Programming/wagering/wagering/scripts/mlb_schedule_import.py",
		"/C/Users/joshua/Programming/wagering/scripts/mlb_schedule_import.py",
		"/C/Users/joshua/Programming/wagering/templates/wagers/propositions/snippets/schedule_form.html",
		"/C/Users/joshua/Programming/wagering/game_database/forms.py",
		"/C/Users/joshua/Programming/wagering/game_database/urls.py",
		"/C/Users/joshua/Programming/wagering/game_database/views.py",
		"/C/Users/joshua/Programming/wagering/game_database/admin.py",
		"/C/Users/joshua/Programming/wagering/sublime.sublime-workspace",
		"/C/Users/joshua/Desktop/officeprops design notes.txt",
		"/C/Users/joshua/Programming/wagering/TODO",
		"/C/Users/joshua/Programming/wagering/templates/registration/register.html",
		"/C/Users/joshua/Programming/wagering/templates/registration/login.html",
		"/C/Users/joshua/AppData/Roaming/Sublime Text 2/Packages/User/HTML.sublime-settings",
		"/C/Users/joshua/AppData/Roaming/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/C/Users/joshua/Desktop/project.clj",
		"/C/Users/joshua/Documents/ADC Observations",
		"/C/Users/joshua/Desktop/test.py",
		"/C/Users/joshua/AppData/Roaming/Sublime Text 2/Packages/User/SublimeREPL.sublime-settings"
	],
	"find":
	{
		"height": 36.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"open_prop_at",
			"open_wager_at",
			"Schedule",
			"img",
			"limit(5)",
			"active",
			"redirect",
			"Game",
			">",
			"p",
			"h1",
			"=",
			"\n",
			""
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"limit"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/C/Users/joshua/Programming/Programming-Collective-Intelligence/Joshua Cole/recomnendations.py",
					"settings":
					{
						"buffer_size": 4648,
						"regions":
						{
						},
						"selection":
						[
							[
								753,
								753
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 90.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/C/Users/joshua/AppData/Roaming/Sublime Text 2/Packages/User/Python.sublime-settings",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 2,
					"settings":
					{
						"buffer_size": 1556,
						"regions":
						{
						},
						"selection":
						[
							[
								1556,
								1556
							]
						],
						"settings":
						{
							"auto_complete": true,
							"auto_indent": false,
							"detect_indentation": false,
							"gutter": false,
							"history_arrows": true,
							"indent_subsequent_lines": false,
							"line_numbers": false,
							"repl": true,
							"repl_external_id": "python",
							"repl_id": "bc96a61bf30f48e18a97418f11d64f1d",
							"smart_indent": false,
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 60.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 36.0
	},
	"input":
	{
		"height": 36.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				0,
				1,
				1,
				2
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 166.0
	},
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": false,
	"side_bar_visible": true,
	"side_bar_width": 176.0,
	"status_bar_visible": true
}
